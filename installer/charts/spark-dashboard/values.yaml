grafana:
  enabled: true
  image:
    repository: grafana/grafana
    pullPolicy: IfNotPresent
    tag: "10.4.2"

  service:
    # Options are ClusterIP (if use Ingress), NodePort, LoadBalancer
    type: ClusterIP
    # optional no need value
    clusterIP:
    # Only need to fill up if service type is NodePort
    nodePortGrafanaPort: 35001

    annotations: {}
      # networking.gke.io/load-balancer-type: "Internal"
      # service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: true
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

      # acme.cert-manager.io/http01-edit-in-place: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
      # cert-manager.io/issue-temporary-certificate: "true"
      # kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/rewrite-target: /$2

    # leave empty if do not have dns name
    host:

    http:
      paths:
      - backend:
          service:
            name: "{{ include \"spark-dashboard.fullname\" . }}-grafana"
            port:
              number: 3000
        path: /grafana(/|$)(.*)
        pathType: Prefix

    tls: []
      # - hosts:
      #    - grafana.begonia.aisingapore.net
      # secretName: chart-example-tls

    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 0.2
        memory: 0.5Gi

  passwordPairs:
    user: dashboard
    password: 1K7rYwg655Zl

influxdb:
  image:
    repository: influxdb
    pullPolicy: IfNotPresent
    tag: "1.8.10"

  disableReporting: "true"
  dbName: "graphite"

  service:
    # Options are ClusterIP (if use Ingress), NodePort, LoadBalancer
    type: ClusterIP
    # optional no need value
    clusterIP:
    # Only need to fill up if service type is NodePort
    nodePortGrafanaPort: 36001

    annotations: {}
      # networking.gke.io/load-balancer-type: "Internal"
      # service.beta.kubernetes.io/azure-load-balancer-internal: "true"

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"

      # acme.cert-manager.io/http01-edit-in-place: "true"
      # cert-manager.io/cluster-issuer: letsencrypt-prod
      # cert-manager.io/issue-temporary-certificate: "true"
      # kubernetes.io/ingress.class: nginx

    # leave empty if do not have dns name
    host:

    http:
      paths:
      - backend:
          service:
            name: "{{ include \"spark-dashboard.fullname\" . }}-influx"
            port:
              number: 8086
        path: /influx
        pathType: Prefix

    tls: []
      # - hosts:
      #    - influx.begonia.aisingapore.net
      # secretName: chart-example-tls

  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 0.2
      memory: 0.5Gi

  passwordPairs:
    user: influx
    password: QeS87mkUg5Uj
