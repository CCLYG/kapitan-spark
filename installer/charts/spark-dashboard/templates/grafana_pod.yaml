{{- if .Values.grafana.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spark-dashboard.fullname" . }}-grafana
  namespace: {{ .Release.Namespace }} 
  labels:
    {{- include "spark-dashboard.labels" $ | trim | nindent 4 }}
    app: {{ include "spark-dashboard.fullname" . }}-grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "spark-dashboard.fullname" . }}-grafana
  template:
    metadata:
      labels:
        app: {{ include "spark-dashboard.fullname" . }}-grafana
    spec:
      containers:
      - name: grafana
        image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
        imagePullPolicy: {{.Values.grafana.image.pullPolicy}}
        securityContext:
            allowPrivilegeEscalation: false  
        volumeMounts:
        - name: datasource-conf
          mountPath: /etc/grafana/provisioning/datasources/influx.yaml
          subPath: influx-datasource-config
        - name: datasource-conf
          mountPath: /etc/grafana/provisioning/dashboards/spark.yaml
          subPath: spark-dashboard-config
        - name: spark-dashboard
          mountPath: /var/lib/grafana/dashboards
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: healthz
            port: http
        readinessProbe:
          httpGet:
            path: healthz
            port: http
        resources:
            {{- toYaml .Values.grafana.resources | nindent 12 }}
        env:

              {{if not ( eq (index .Values.grafana.ingress.http.paths 0 "path") "/")}}
              - name: GF_SERVER_ROOT_URL
                value: "/grafana"
              {{end}}
              - name: GF_SECURITY_ADMIN_USER
                valueFrom:
                  secretKeyRef:
                    name: {{ include "spark-dashboard.fullname" . }}-grafana-auth
                    key: user
              - name: GF_SECURITY_ADMIN_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: {{ include "spark-dashboard.fullname" . }}-grafana-auth
                    key: password  
      volumes:
        - name: datasource-conf
          configMap:
            name: {{ include "spark-dashboard.fullname" . }}-datasource
        - name: spark-dashboard
          configMap:
            name: {{ include "spark-dashboard.fullname" . }}-dashboard
{{ end }}